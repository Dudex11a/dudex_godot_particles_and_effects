[gd_scene load_steps=13 format=3 uid="uid://dc1gx4n6kkgxh"]

[ext_resource type="Texture2D" uid="uid://dglebg4dbsuqc" path="res://img/wave_1.png" id="1_jylue"]
[ext_resource type="Shader" path="res://scenes/mesh_path/mesh_path_particle_mat.gdshader" id="2_ic30u"]
[ext_resource type="PlaneMesh" uid="uid://cvflyk2xw3bsd" path="res://scenes/fire_1/fire_1_mesh.tres" id="3_6quwe"]

[sub_resource type="Curve3D" id="Curve3D_krt86"]
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 8, 0, 0, 8, 0, -8),
"tilts": PackedFloat32Array(0, 0)
}
point_count = 2

[sub_resource type="Shader" id="Shader_dgybc"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}


void fragment() {
	vec2 base_uv = UV;
	// Scroll UV
	base_uv.x += TIME;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_34ekd"]
render_priority = 0
shader = SubResource("Shader_dgybc")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(0.1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_jylue")

[sub_resource type="GDScript" id="GDScript_byw3v"]
script/source = "@tool
extends CSGPolygon3D

#@export var move_polygon: bool = false:
#	set(value):
#		if value:
#			move_polygon = false
#			for point_index in polygon.size():
#				polygon[point_index] *= 1.5
"

[sub_resource type="Shader" id="Shader_737fp"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}


void fragment() {
	vec2 base_uv = UV;
	// Scroll UV
	base_uv.x -= TIME / 2.0;
	base_uv.y += TIME / 5.0;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_rwe51"]
load_path = "res://.godot/imported/wave_1.png-8271e962edd5d7a59c40bb6d4864b2e0.s3tc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1jvt1"]
render_priority = 0
shader = SubResource("Shader_737fp")
shader_parameter/albedo = Color(1, 1, 1, 0.388235)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(0.1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("CompressedTexture2D_rwe51")

[sub_resource type="GDScript" id="GDScript_iot18"]
script/source = "@tool
extends CSGPolygon3D

@export var move_polygon: bool = false:
	set(value):
		if value:
			move_polygon = false
			for point_index in polygon.size():
				polygon[point_index] *= 1.5
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8oa4m"]
shader = ExtResource("2_ic30u")

[node name="MeshPath" type="Node3D"]

[node name="Path3D" type="Path3D" parent="."]
curve = SubResource("Curve3D_krt86")

[node name="SmallTube" type="CSGPolygon3D" parent="."]
polygon = PackedVector2Array(0.75, 0.25, 0.25, 0.75, -0.25, 0.75, -0.75, 0.25, -0.75, -0.25, -0.25, -0.75, 0.25, -0.75, 0.75, -0.25)
mode = 2
path_node = NodePath("../Path3D")
path_interval_type = 1
path_interval = 0.1
path_simplify_angle = 0.0
path_rotation = 1
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
smooth_faces = true
material = SubResource("ShaderMaterial_34ekd")
script = SubResource("GDScript_byw3v")

[node name="LargeTube" type="CSGPolygon3D" parent="."]
polygon = PackedVector2Array(1.125, 0.375, 0.375, 1.125, -0.375, 1.125, -1.125, 0.375, -1.125, -0.375, -0.375, -1.125, 0.375, -1.125, 1.125, -0.375)
mode = 2
path_node = NodePath("../Path3D")
path_interval_type = 1
path_interval = 0.1
path_simplify_angle = 0.0
path_rotation = 1
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
smooth_faces = true
material = SubResource("ShaderMaterial_1jvt1")
script = SubResource("GDScript_iot18")

[node name="GPUParticles3D" type="GPUParticles3D" parent="."]
process_material = SubResource("ShaderMaterial_8oa4m")
draw_pass_1 = ExtResource("3_6quwe")
